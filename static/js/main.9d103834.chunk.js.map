{"version":3,"sources":["pages/auth/lostPassword/LostPassword.module.css","pages/auth/newPassword/NewPassword.module.css","components/header/Header.module.css","pages/404/404.tsx","pages/auth/login/Login.tsx","api/api.ts","redux/lostPassword-reducer.ts","pages/auth/lostPassword/LostPassword.tsx","redux/newPassword-reducer.ts","pages/auth/newPassword/NewPassword.tsx","pages/auth/register/Register.tsx","pages/profile/Profile.tsx","pages/test/Test.tsx","routes/Routes.tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","redux/porfile_reducer.tsx","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.tsx","index.tsx"],"names":["module","exports","Error404","Login","instance","axios","create","baseURL","withCredentials","lostPasswordAPI","email","post","from","message","then","response","data","newPasswordAPI","password","resetPasswordToken","initialState","error","setResponseError","responseError","type","LostPassword","useSelector","state","lostPassword","useState","setEmail","dispatch","useDispatch","className","s","main","onChange","e","currentTarget","value","placeholder","onClick","a","postEmailTC","redirect","NewPassword","password1","setPassword1","password2","setPassword2","token","useParams","newPassword","badPassword","setBadPassword","to","PATH","NEW_PASS","inputs","redirectStatus","Register","Profile","Test","LOGIN","REGISTRATION","PROFILE","RESET_PASS","TEST","Routes","path","exact","render","Header","routes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","profile","action","auth","app","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d103834.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LostPassword_main__3xQgA\",\"error\":\"LostPassword_error__YYWEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__1qOPI\",\"inputs\":\"NewPassword_inputs__2WFNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routes\":\"Header_routes__14k2N\"};","import React from \"react\";\r\n\r\n\r\nexport const Error404 = () => {\r\n    return <>\r\n        <div>Page 404</div>\r\n    </>\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Login = () => {\r\n    return <>\r\n        <div>Login</div>\r\n    </>\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://neko-back.herokuapp.com/2.0/`,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const lostPasswordAPI = {\r\n    postEmail(email: string) {\r\n        return instance.post(`auth/forgot`, {email, from: \"cards-admin <valdismin@gmail.com>\", message: `<div style=\"background-color: lime; padding: 15px\"> password recovery link: <a href='https://Valdismin.github.io/friday_project/#/new-pass/$token$'>link</a></div>`}).then(response => response.data)\r\n    }\r\n}\r\nexport const newPasswordAPI = {\r\n    postNewPassword(password:string,resetPasswordToken:string) {\r\n        return instance.post(`auth/set-new-password`, {password,resetPasswordToken}).then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n","import {lostPasswordAPI} from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    error: null\r\n}\r\n\r\nexport type  initType = {\r\n    error: string | null\r\n}\r\n\r\nexport const lostPasswordReducer = (state: initType = initialState, action: ActionType): initType => {\r\n    switch (action.type) {\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.responseError}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setResponseError = (responseError: string | null) => ({type: \"SET-ERROR\", responseError} as const)\r\n\r\ntype ActionType = ReturnType<typeof setResponseError>\r\n\r\nexport const postEmailTC = (email: string) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            await lostPasswordAPI.postEmail(email)\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\r\n            dispatch(setResponseError(error))\r\n        }\r\n    }\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./LostPassword.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {stateType} from \"../../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../routes/Routes\";\r\nimport {postEmailTC} from \"../../../redux/lostPassword-reducer\";\r\n\r\nexport const LostPassword = () => {\r\n\r\n    const error = useSelector<stateType, string | null>(state => state.lostPassword.error)\r\n    const [email, setEmail] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const postEmail = () => {\r\n        return dispatch(postEmailTC(email))\r\n    }\r\n\r\n\r\n    return <div className={s.main}>\r\n        <h1>Укажите email или телефон</h1>\r\n        <h3>Пожалуйста, укажите email или телефон, который вы использовали для входа на сайт</h3>\r\n        <input onChange={onInputChange} placeholder={\"Enter Email\"}/>\r\n        {error ? <div className={s.error}>{error}</div> : null}\r\n        <button onClick={postEmail}>Next</button>\r\n    </div>\r\n}","import {newPasswordAPI} from \"../api/api\";\r\nimport {setResponseError} from \"./lostPassword-reducer\";\r\n\r\nlet initialState = {\r\n    redirect: false,\r\n}\r\n\r\nexport type  initType = {\r\n    redirect: boolean\r\n}\r\n\r\n\r\nexport const newPasswordReducer = (state: initType = initialState, action: ActionType) => {\r\n    switch(action.type) {\r\n        case \"CHANGE-REDIRECT\":\r\n            return {...state, redirect: action.redirectStatus}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof changeRedirectStatus>\r\n\r\nexport const changeRedirectStatus = (redirectStatus: boolean) => ({type: \"CHANGE-REDIRECT\", redirectStatus} as const)\r\n\r\nexport const postNewPasswordTC = (password:string,resetPasswordToken:string) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            await newPasswordAPI.postNewPassword(password,resetPasswordToken)\r\n            dispatch(changeRedirectStatus(true))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\r\n            dispatch(setResponseError(error))\r\n        }\r\n    }\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport s from './NewPassword.module.css'\r\nimport {PATH} from \"../../../routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {stateType} from \"../../../redux/redux-store\";\r\nimport {postEmailTC} from \"../../../redux/lostPassword-reducer\";\r\nimport {postNewPasswordTC} from \"../../../redux/newPassword-reducer\";\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const [password1, setPassword1] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n    const {token} = useParams<{ token: string }>()\r\n    const dispatch = useDispatch()\r\n    const redirect = useSelector<stateType, boolean>(state => state.newPassword.redirect)\r\n    const [badPassword,setBadPassword] = useState(false)\r\n\r\n    const changePassword1 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.currentTarget.value)\r\n    }\r\n    const changePassword2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const changePassword = () => {\r\n        if (password1 === password2) {\r\n            return dispatch(postNewPasswordTC(password2, token))\r\n        } else {\r\n            return setBadPassword(true)\r\n        }\r\n\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to={PATH.NEW_PASS}/>\r\n    }\r\n\r\n    return <div className={s.main}>\r\n        <h1>Введите новый пароль</h1>\r\n        <div className={s.inputs}>\r\n            <input onChange={changePassword1} type=\"password\" placeholder={\"Enter new password\"}/>\r\n            <input onChange={changePassword2} type=\"password\" placeholder={\"Repeat new password\"}/>\r\n            {badPassword ? <div>Passwords mismatch!</div> : null}\r\n        </div>\r\n        <button onClick={changePassword}>Next</button>\r\n    </div>\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Register = () => {\r\n    return <div>\r\n        Register Page\r\n    </div>\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n    return <div>\r\n        Profile Page\r\n    </div>\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Test = () => {\r\n    return <div>\r\n        Test Page\r\n    </div>\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch } from \"react-router-dom\";\r\nimport {Error404} from \"../pages/404/404\";\r\nimport { Login } from \"../pages/auth/login/Login\";\r\nimport { LostPassword } from \"../pages/auth/lostPassword/LostPassword\";\r\nimport { NewPassword } from \"../pages/auth/newPassword/NewPassword\";\r\nimport {Register} from \"../pages/auth/register/Register\";\r\nimport { Profile } from \"../pages/profile/Profile\";\r\nimport { Test } from \"../pages/test/Test\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: \"/register\",\r\n    PROFILE: \"/profile\",\r\n    NEW_PASS : \"/new-pass\",\r\n    RESET_PASS: \"/reset-pass\",\r\n    TEST: \"/test\",\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR\r\n                exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.NEW_PASS} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.RESET_PASS} render={() => <LostPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n                у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\nimport {PATH} from \"../../routes/Routes\";\r\n\r\n\r\nexport const Header = () => {\r\n    return <div >\r\n        <ul className={s.routes}>\r\n            <li><NavLink to={PATH.PROFILE}> Profile</NavLink></li>\r\n            <li><NavLink to={PATH.TEST}> Test </NavLink></li>\r\n            <li><NavLink to={PATH.NEW_PASS}> Change password </NavLink></li>\r\n            <li><NavLink to={PATH.REGISTRATION}> Sign up </NavLink></li>\r\n            <li><NavLink to={PATH.RESET_PASS}> Reset password </NavLink></li>\r\n            <li><NavLink to={PATH.LOGIN}> Sing in </NavLink></li>\r\n        </ul>\r\n    </div>\r\n}","import React from 'react';\nimport {Header} from \"./components/header/Header\";\nimport {HashRouter} from \"react-router-dom\";\nimport { Routes } from './routes/Routes';\n\n\nfunction App() {\n  return (\n      <HashRouter>\n        <Header/>\n        <Routes/>\n      </HashRouter>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n\r\n}\r\n\r\nexport const profileReducer = (state: any = initialState, action: any) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","let initialState = {\r\n\r\n}\r\n\r\nexport const authReducer = (state: any = initialState, action: any) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","let initialState = {\r\n\r\n}\r\n\r\nexport const appReducer = (state: any = initialState, action: any) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n    }\r\n\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {profileReducer} from \"./porfile_reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {newPasswordReducer} from \"./newPassword-reducer\";\r\nimport {lostPasswordReducer} from \"./lostPassword-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profile:profileReducer,\r\n    auth:authReducer,\r\n    app:appReducer,\r\n    newPassword:newPasswordReducer,\r\n    lostPassword:lostPasswordReducer\r\n})\r\n\r\nexport let store = createStore(reducers,applyMiddleware(thunk))\r\n\r\nexport type stateType =  ReturnType<typeof reducers>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/redux-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}